import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import Main from "../src/components/Main";
import arrow from "../src/images/icons8-freccia.webp";
import { goUp, goDown } from "../src/utils/SlidesUtils";
import Contacts from "../src/components/Contacts";
import Projects from "../src/components/Projects";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import contentfulClient from "../src/client/ContentfulClient";
import { mapProjects } from "../src/utils/ProjectUtils";
import { Project } from "../src/types/Project";

export async function getStaticProps() {
  const contentfulProjects = await contentfulClient
    .getEntries("project")
    .then((res) => res.items);
  const projects = mapProjects(contentfulProjects);
  return { props: { projects } };
}

export default function Home(props: { projects: Project[] }) {
  const [mainClass, setMainClass] = useState("active");
  const [projectsClass, setProjectsClass] = useState("up");
  const [contactsClass, setContactsClass] = useState("down");
  const [hideTop, setHideTop] = useState(false);
  const [hideBottom, setHideBottom] = useState(false);
  console.log(props.projects);
  useEffect(() => {
    projectsClass === "active" ? setHideTop(true) : setHideTop(false);
  }, [projectsClass]);

  useEffect(() => {
    contactsClass === "active" ? setHideBottom(true) : setHideBottom(false);
  }, [contactsClass]);

  return (
    <div className="index">
      <Head>
        <title>JM</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Image
        src={arrow}
        alt="arrow up"
        width={50}
        height={40}
        className={hideTop ? "arrow_up_hide" : "arrow_up"}
        onClick={() =>
          goUp(mainClass, setMainClass, setProjectsClass, setContactsClass)
        }
      />
      <Main />
      <Contacts contactsClass={contactsClass} />
      <Projects projectsClass={projectsClass} projects={props.projects} />
      <Image
        src={arrow}
        alt="arrow down"
        width={50}
        height={40}
        className={hideBottom ? "arrow_down_hide" : "arrow_down"}
        onClick={() =>
          goDown(mainClass, setMainClass, setProjectsClass, setContactsClass)
        }
      />
      <ToastContainer
        position="top-right"
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="dark"
      />
    </div>
  );
}
